#!/usr/bin/perl -w
#
# Used to invoke the JVM when running the server and other tools

use Getopt::Long;

my $usage = "Usage: $0 [--pid_file pid_file] [--verbose] args\n";
my $root = `dirname $0 | sed s:/bin\$::`; chomp($root);

# parse our command line arguments
my $pid_file;
my $verbose;
GetOptions("pid_file:s" => \$pid_file,
           "verbose" => \$verbose);
die $usage if (@ARGV == 0);

my $jargs = "";

# determine our machine architecture
my $ostype = `uname -s`;
my $machtype = `uname -m`;
chomp($ostype);
chomp($machtype);
my $arch = "$machtype-$ostype";

# add our native libraries to the runtime library path
my $libs = "$root/dist/lib/$arch";
my $libpath = $ENV{"LD_LIBRARY_PATH"};

if (defined $libpath) {
    $ENV{"LD_LIBRARY_PATH"} = "$libs:$libpath";
} else {
    $ENV{"LD_LIBRARY_PATH"} = $libs;
}

# the classpath needs to start with .
my $classpath = "$root";

# if there's classpath environment variable, add that in here
$classpath .= ":" . $ENV{"CLASSPATH"} if (defined $ENV{"CLASSPATH"});

# now we add other jar files unless the development directory has already
# been added via CLASSPATH
my $havenarya = ($classpath =~ m:narya/dist/classes:);
my $havetoy = ($classpath =~ m:toybox/dist/classes:);

# add zip and jar files from our lib/ directory
my @dirs = ( "$root/dist", "$root/dist/lib" );
foreach $dir (@dirs) {
    next unless (defined $dir);
    if (opendir(DIR, $dir)) {
        foreach $lib (grep { /.(zip|jar)/ && -f "$dir/$_" } readdir(DIR)) {
	    next if ($lib =~ m/yohoho-rsrc/);
            # if the development directory is in the classpath, we don't
            # want the jar files because things can only show up once in
            # the classpath
	    next if ($havenarya && $lib =~ m/narya.*.jar/);
	    next if ($havetoy && $lib =~ m/toybox.jar/);
            $classpath .= ":$dir/$lib";
        }
        closedir DIR;
    }
}

# finally add the standard classes
$classpath = "$classpath:$root/dist";

# log the pid file if requested to do so
print `echo $$ > $pid_file` if (defined $pid_file);

my $appargs = "\"" . join("\" \"", @ARGV) . "\"";
my $cmd = "java -mx128M -classpath $classpath $jargs $appargs";
if ($verbose) {
    print "JVM args: java $jargs\n";
    print "Classpath: " . join("\n           ", split(/:/, $classpath)) . "\n";
    print "App args: $appargs\n";
}
exec($cmd);
