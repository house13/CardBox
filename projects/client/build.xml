<?xml version="1.0"?>
<project name="card-client" default="all" basedir="." xmlns:artifact="urn:maven-artifact-ant">
  <property name="base.dir" value="../.."/>
  <property name="client.dir" value="${base.dir}/pages/client"/>

  <!-- boilerplate for downloading maven ant task jar -->
  <import file="${base.dir}/maven-ant.xml"/>

  <target name="proguard" depends="-init-maven-ant" description="Builds our client jar file.">
    <!-- locate the platform classes -->
    <condition property="rt.jar" value="${java.home}/../Classes/classes.jar">
      <available file="${java.home}/../Classes/classes.jar"/>
    </condition>
    <condition property="rt.jar" value="${java.home}/lib/rt.jar">
      <available file="${java.home}/lib/rt.jar"/>
    </condition>

    <!-- copy our dependencies somewhere that we can pass them to proguard -->
    <artifact:dependencies filesetId="cardbox.fileset">
      <dependency groupId="com.hextilla" artifactId="cardbox" version="1.0"/>
    </artifact:dependencies>

    <!-- do the proguardian deed -->
    <artifact:dependencies pathId="proguard.classpath">
      <dependency groupId="net.sf.proguard" artifactId="proguard" version="4.4"/>
    </artifact:dependencies>
    <taskdef resource="proguard/ant/task.properties" classpathref="proguard.classpath"/>
    <proguard configuration="lib/card-client.pro">
      <libraryjar name="${rt.jar}"/>
      <libraryjar name="${java.home}/lib/jce.jar"/>
	  <libraryjar path="lib/jsr305.jar"/>
      <injar path="${com.google.guava:guava:jar}" filter="!META-INF/*"/>
      <injar path="${com.threerings:getdown:jar}" filter="!META-INF/*,!**/tools/**"/>
      <injar path="${com.threerings:narya:jar}"
             filter="!META-INF/*,!**/admin/**,!**/tools/**"/>
      <injar path="${com.threerings:nenya:jar}" filter="!META-INF/*,!**/tools/**"/>
      <injar path="${com.threerings:vilya:jar}" filter="!META-INF/*,!**/tools/**"/>
      <injar path="${com.samskivert:samskivert:jar}"
             filter="!META-INF/*,!**/jdbc/**,!**/servlet/**"/>
      <injar path="${com.samskivert:samskivert:jar}"
             filter="**/user/Password.class,**/user/UserUtil.class"/>
      <injar path="${com.hextilla:cardbox:jar}" filter="!META-INF/*,!*/xml/*"/>
      <injar path="${com.restfb:restfb:jar}" filter="!META-INF/*,!*/xml/*"/>
      <injar path="${org.apache.httpcomponents:httpcore:jar}" filter="!META-INF/*,!*/xml/*"/>
      <injar path="${org.apache.httpcomponents:httpcore-nio:jar}" filter="!META-INF/*,!*/xml/*"/>
      <injar path="${org.apache.httpcomponents:httpclient:jar}" filter="!META-INF/*,!*/xml/*"/>
      <injar path="${org.apache.httpcomponents:httpasyncclient:jar}" filter="!META-INF/*,!*/xml/*"/>
      <outjar path="${client.dir}/card-client.jar"/>
    </proguard>

    <!-- also copy the client jar into the game development directory -->
    <copy file="${client.dir}/card-client.jar" todir="../games/client"/>
  </target>

  <property file="${base.dir}/dist/build_settings.properties"/>
  <target name="-maybe-sign" if="sign.alias">
    <signjar lazy="true" alias="${sign.alias}"
             keystore="${sign.keystore}" storepass="${sign.storepass}">
      <fileset dir="${client.dir}" includes="*.jar"/>
    </signjar>
  </target>

  <target name="sign" depends="-maybe-sign" description="Signs our client jar file.">
    <!-- copy the signed client jar into the game development directory -->
    <copy todir="../games/client" file="${client.dir}/card-client.jar"/>
  </target>

  <target name="all" depends="proguard,sign"
          description="Builds and signs the client jar file."/>

  <target name="clean" description="Cleans out build results.">
    <delete><fileset dir="${client.dir}" includes="*.jar"/></delete>
    <delete file="../games/client/card-client.jar"/>
  </target>
</project>
