<!-- project build configuration -->
<project name="gardens" default="all" basedir="." xmlns:artifact="urn:maven-artifact-ant">

  <property name="src.dir"    value="src/java"/>
  <property name="deploy.dir" value="dist"/>
  <property name="webapp.dir" value="${deploy.dir}/${ant.project.name}"/>
  <property name="dist.war"   value="${deploy.dir}/${ant.project.name}.war"/>
  <property name="properties.file" value="../../${deploy.dir}/toybox.properties"/>

  <!-- boilerplate for downloading maven ant task jar -->
  <import file="../../maven-ant.xml"/>

  <target name="prepare" depends="-init-maven-ant">
    <mkdir dir="${deploy.dir}/classes"/>
    <mkdir dir="${webapp.dir}"/>
    <copy todir="${webapp.dir}">
      <fileset dir="web" excludes="**/*.in"/>
    </copy>
    <mkdir dir="${webapp.dir}/WEB-INF"/>
    <copy file="etc/web.xml" tofile="${webapp.dir}/WEB-INF/web.xml"/>
    <mkdir dir="${webapp.dir}/WEB-INF/classes"/>
    <copy todir="${webapp.dir}/WEB-INF/classes">
      <fileset dir="etc" includes="**/*.properties"/>
    </copy>
    <copy file="${properties.file}" todir="${deploy.dir}"/>
    <copy file="${properties.file}" todir="${webapp.dir}/WEB-INF/classes"/>
    <mkdir dir="${webapp.dir}/WEB-INF/lib"/>

    <!-- get most of our dependencies from Maven -->
    <artifact:dependencies filesetId="ooo.maven.fileset">
      <remoteRepository url="http://ooo-maven.googlecode.com/hg/repository" id="ooo-maven"/>
      <dependency groupId="org.apache.velocity" artifactId="velocity-ooo" version="1.6.4"/>
    </artifact:dependencies>
    <artifact:dependencies filesetId="maven.fileset">
      <dependency groupId="commons-digester" artifactId="commons-digester" version="2.0"/>
      <dependency groupId="commons-fileupload" artifactId="commons-fileupload" version="1.2.1"/>
      <dependency groupId="commons-io" artifactId="commons-io" version="1.4"/>
      <dependency groupId="javax.mail" artifactId="mail" version="1.4.1"/>
      <dependency groupId="javax.servlet" artifactId="servlet-api" version="2.5"/>
      <dependency groupId="mysql" artifactId="mysql-connector-java" version="5.1.6"/>
      <dependency groupId="com.threerings" artifactId="toybox" version="1.1-SNAPSHOT"/>
    </artifact:dependencies>
    <copy todir="${deploy.dir}/lib">
      <fileset refid="maven.fileset"/>
      <fileset refid="ooo.maven.fileset"/>
      <mapper type="flatten"/>
    </copy>

    <!-- optionally copy the ooo-toybox-auth and threerings jars if available -->
    <copy todir="${deploy.dir}/lib" failonerror="false">
      <fileset dir="../../${deploy.dir}/lib" includes="ooo-toybox-auth.jar"/>
      <fileset dir="../../${deploy.dir}/lib" includes="threerings-*.jar"/>
    </copy>
  </target>

  <target name="compile" depends="prepare">
    <javac srcdir="${src.dir}" destdir="${deploy.dir}/classes" includeAntRuntime="false"
           debug="on" optimize="${build.optimize}">
      <classpath>
        <pathelement location="${deploy.dir}/classes"/>
        <fileset dir="${deploy.dir}/lib" includes="*.jar"/>
      </classpath>
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Xlint:-serial"/>
      <compilerarg value="-Xlint:-path"/>
    </javac>
    <!-- copy the compilation results to the webapp classes directory -->
    <copy todir="${webapp.dir}/WEB-INF/classes">
      <fileset dir="${deploy.dir}/classes" includes="**/*.*"/>
    </copy>
    <!-- copy the library jar files -->
    <copy todir="${webapp.dir}/WEB-INF/lib">
      <fileset dir="${deploy.dir}/lib" includes="**/*.jar"/>
    </copy>
  </target>

  <target name="dist" depends="compile">
    <!-- update the build timestamp file -->
    <propertyfile file="${webapp.dir}/WEB-INF/classes/build.properties">
      <entry key="build.time" type="date" value="now"/>
    </propertyfile>
    <jar basedir="${webapp.dir}" destfile="${dist.war}"/>
  </target>

  <target name="clean" description="Cleans out compiled classes.">
    <delete dir="${deploy.dir}/classes"/>
    <delete dir="${webapp.dir}/WEB-INF"/>
  </target>

  <target name="distclean" description="Cleans all build results.">
    <delete dir="${deploy.dir}"/>
  </target>

  <target name="-init-jetty-ant">
    <!-- download jetty-ant and dependencies via Maven -->
    <artifact:dependencies pathId="jetty-ant.classpath">
      <dependency groupId="org.mortbay.jetty" artifactId="jetty-ant"
                  version="6.1.25" scope="runtime" />
      <dependency groupId="org.mortbay.jetty" artifactId="jetty-ajp"
                  version="6.1.25" scope="runtime" />
      <dependency groupId="org.mortbay.jetty" artifactId="jsp-2.1"
                  version="6.1.14" scope="runtime" />
    </artifact:dependencies>
    <taskdef resource="tasks.properties"
             classpathref="jetty-ant.classpath" loaderref="jetty.loader"/>
    <typedef name="selectChannelConnector" classname="org.mortbay.jetty.nio.SelectChannelConnector"
             classpathref="jetty-ant.classpath" loaderref="jetty.loader"/>
    <typedef name="ajp13SocketConnector" classname="org.mortbay.jetty.ajp.Ajp13SocketConnector"
             classpathref="jetty-ant.classpath" loaderref="jetty.loader"/>
  </target>

  <!-- fires up the webapp using the development sources -->
  <target name="devmode" depends="-init-jetty-ant,dist">
    <!-- Fire up the webapp against the live sources -->
    <propertycopy name="devmode.jetty.port" from="${ant.project.name}.jetty.port"/>
    <jetty tempDirectory="${deploy.dir}/jetty-temp">
      <webApp name="${ant.project.name}" warfile="${templates.location}" webxmlfile="etc/web.xml"
        contextpath="/${ant.project.name}" scanIntervalSeconds="2">
        <classes dir="${deploy.dir}"/>
        <classes dir="${deploy.dir}/classes"/>
        <classes dir="etc"/>
        <lib dir="${deploy.dir}/lib" includes="*.jar"/>
      </webApp>
      <connectors>
        <ajp13SocketConnector port="${devmode.jetty.port}"/>
	<selectChannelConnector port="8080"/>
      </connectors>
      <systemProperties>
        <systemProperty name="${src.pkg.name}.devmode.enabled" value="true"/>
        <systemProperty name="${src.pkg.name}.devmode.template_path"
          value="${basedir}/${templates.location}"/>
        <systemProperty name="${src.pkg.name}.devmode.siteid" value="${devmode.siteid}"/>
      </systemProperties>
    </jetty>
  </target>
</project>
